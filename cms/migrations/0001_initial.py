# Generated by Django 4.2.20 on 2025-04-19 17:09

import uuid

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "discount_target",
                    models.CharField(
                        choices=[
                            ("CART", "Cart Value Discount"),
                            ("DELIVERY", "Delivery Discount"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "discount_value",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0)
                        ]
                    ),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("PERCENTAGE", "Percentage"),
                            ("FIXED", "Fixed Amount"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "min_cart_value",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0)
                        ],
                    ),
                ),
                (
                    "max_discount_amount",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0)
                        ],
                    ),
                ),
                (
                    "total_budget",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0)
                        ],
                    ),
                ),
                ("budget_used", models.FloatField(default=0)),
                (
                    "max_uses_per_customer",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "max_uses_total",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CampaignUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("used_at", models.DateTimeField(auto_now_add=True)),
                ("discount_amount", models.FloatField()),
                ("cart_id", models.UUIDField(blank=True, null=True)),
                ("order_id", models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CustomerGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="GroupMembership",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_memberships",
                        to="cms.customer",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="cms.customergroup",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["email"], name="cms_custome_email_259cc3_idx"
            ),
        ),
        migrations.AddField(
            model_name="campaignusage",
            name="campaign",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="usages",
                to="cms.campaign",
            ),
        ),
        migrations.AddField(
            model_name="campaignusage",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="campaign_usages",
                to="cms.customer",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="target_groups",
            field=models.ManyToManyField(blank=True, to="cms.customergroup"),
        ),
        migrations.AddIndex(
            model_name="groupmembership",
            index=models.Index(
                fields=["customer"], name="cms_groupme_custome_290740_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="groupmembership",
            unique_together={("group", "customer")},
        ),
        migrations.AddIndex(
            model_name="campaignusage",
            index=models.Index(
                fields=["customer", "campaign"],
                name="cms_campaig_custome_f6dfac_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="campaign",
            index=models.Index(
                fields=["is_active", "start_date", "end_date"],
                name="cms_campaig_is_acti_de35d8_idx",
            ),
        ),
    ]
